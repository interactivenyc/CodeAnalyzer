package// original code by Ady Levy - adylevy.com// custom mods for outside created panel objects - Alan Gruskoff - digitalshowcase.biz{	import TopLevel;	import AccordionComponent;	import caurina.transitions.Tweener;	import PanelSprite;		// custom subclass to add panelNumber property	import flash.text.TextFormat;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.display.Sprite;	import flash.display.GradientType;	import flash.geom.Matrix;	import flash.events.MouseEvent;		public class AccordionExample extends TopLevel	{		const GREEN:uint = 0x0fe87b;		const GREY:uint = 0x8C8C8C;		var accord:AccordionComponent;		var acrdPanel1:Sprite;		var acrdPanel2:Sprite;		var acrdPanel3:Sprite;		var acrdPanel4:Sprite;		var acrdPanel5:Sprite;		var acrdHdrTitle:String;		var panelWidth:uint = 400;		var panelHeight:uint = 400;		var navHeight:uint = 30;		var panelColor:uint;		var hdrText:TextField;		var pnlText:TextField;		var hdrTxtFormat:TextFormat = new TextFormat();		var pnlTxtFormat:TextFormat = new TextFormat();		var currentPanel:Number = 1;				public function AccordionExample()		{			hdrTxtFormat.font = "_sans";			hdrTxtFormat.size = 14;			hdrTxtFormat.color = 0xFFFFFF;	// white			hdrTxtFormat.bold = true;			pnlTxtFormat.font = "_sans";			pnlTxtFormat.size = 18;			pnlTxtFormat.color = 0x000000;	// black			pnlTxtFormat.bold = false;			// instantiate an accordion object here, then add panels to that object			accord = new AccordionComponent(panelWidth,panelHeight,navHeight);			addChild(accord);			panelColor = 0xDDDDDD;  // light grey			acrdPanel1 = buildPanel("Panel One", panelColor);			// note: the name property is not needed by AccordionComponent, just here for object identification if needed			acrdPanel1.name = "acrdPanel1";			// add some simple text to the panel content to show where we are			pnlText = addPanelContent("Content for Panel One");			acrdPanel1.addChild(pnlText);			accord.addPanel(acrdPanel1);			panelColor = Math.round(Math.random() * 0xFFFFFF);			acrdPanel2 = buildPanel("Panel Two", panelColor);			acrdPanel2.name = "acrdPanel2";			pnlText = addPanelContent("Content for Panel Two");			acrdPanel2.addChild(pnlText);			accord.addPanel(acrdPanel2);						panelColor = Math.round(Math.random() * 0xFFFFFF);			acrdPanel3 = buildPanel("Panel Three", panelColor);			acrdPanel3.name = "acrdPanel3";			pnlText = addPanelContent("Content for Panel Three");			acrdPanel3.addChild(pnlText);			accord.addPanel(acrdPanel3);			panelColor = Math.round(Math.random() * 0xFFFFFF);			acrdPanel4 = buildPanel("Panel Four", panelColor);			acrdPanel4.name = "acrdPanel4";			pnlText = addPanelContent("Content for Panel Four");			acrdPanel4.addChild(pnlText);			accord.addPanel(acrdPanel4);			panelColor = Math.round(Math.random() * 0xFFFFFF);			acrdPanel5 = buildPanel("Panel Five", panelColor);			acrdPanel5.name = "acrdPanel5";			pnlText = addPanelContent("Content for Panel Five");			acrdPanel5.addChild(pnlText);			accord.addPanel(acrdPanel5);			accord.openPanel(1);		// start with the first panel		}		private function buildPanel(_acrdHdrTitle:String, _panelColor:uint):Sprite		{			// this sprite container contains all the content of each panel			var spr:Sprite = new Sprite  ;			spr.graphics.beginFill(_panelColor);			spr.graphics.drawRect(0,0, panelWidth, (panelHeight + navHeight));			spr.graphics.endFill();			// making a gradient fill for the header to give it some dimension			var fillType:String = GradientType.LINEAR;			var colors:Array = [GREEN,GREY];			var alphas:Array = [1,1];			var ratios:Array = [0,255];			// using the matrix to get a 90 degree rotation on the gradient, so it goes top down			var matr:Matrix = new Matrix();			matr.createGradientBox(panelWidth, navHeight, (Math.PI / 2), 0, 0);			var acrdHdr:PanelSprite = new PanelSprite;  // PanelSprite is needed to use the panelNumber property			acrdHdr.name = "btn";			acrdHdr.graphics.beginGradientFill(fillType, colors, alphas, ratios, matr);			acrdHdr.graphics.drawRect(0,0, panelWidth, navHeight);			acrdHdr.graphics.endFill();			acrdHdr.buttonMode = true;			acrdHdr.panelNumber = currentPanel;			currentPanel = currentPanel + 1;			// acrdHdr.addEventListener(MouseEvent.CLICK, doMouseClick);			hdrText = new TextField;			hdrText.text = _acrdHdrTitle;			hdrText.setTextFormat(hdrTxtFormat);			hdrText.x = 20;		// relative to the header			hdrText.y = 4;			hdrText.autoSize = TextFieldAutoSize.LEFT;			hdrText.selectable = false;			hdrText.mouseEnabled = false;	// blends into the header 			acrdHdr.addChild(hdrText);			spr.addChild(acrdHdr);			return spr;		}		private function addPanelContent(_Label:String): TextField		{			var tf:TextField = new TextField;			tf.text = _Label;			tf.setTextFormat(pnlTxtFormat);			tf.x = 100;			tf.y = 120;			tf.autoSize = TextFieldAutoSize.LEFT;			return tf;		}//		private function doMouseClick(evt:MouseEvent):void//		{//			trace("you clicked on " + evt.target.name + "  panelNumber=" + evt.target.panelNumber);//		}	}}