package com.speakaboos.ipad.view.components {		import com.speakaboos.ipad.events.ModalEvents;	import com.speakaboos.ipad.events.CoreEventDispatcher;	import com.speakaboos.ipad.events.GenericDataEvent;	import com.speakaboos.ipad.utils.debug.Logger;		import flash.display.MovieClip;	import flash.events.Event;	/**	 * @author stevewarren	 */	public class CoreMovieClip extends MovieClip {		public function CoreMovieClip() {			init();		}				protected function init():void {			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage,false,0,true);		}				protected function onAddedToStage(e:Event):void{			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			addEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage,false,0,true);		}						protected function onRemovedFromStage(e:Event):void{			removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);						addEventListener(Event.ADDED_TO_STAGE, onAddedToStage,false,0,true);		}				protected function showLoader():void{			log("showing loader");			CoreEventDispatcher.getInstance().dispatchEvent(new GenericDataEvent(ModalEvents.SHOW_LOADER));			}						protected function hideLoader():void{			log("hiding loader");			CoreEventDispatcher.getInstance().dispatchEvent(new GenericDataEvent(ModalEvents.HIDE_LOADER));			}							protected function log(logItem:*, ...args):void{			var category:Array = [String(this).replace("[object ", "").replace("]", "")];			Logger.log(logItem,category,true);						if (args.length > 0) {				Logger.log(args,[category[0]+"..."],true);        	}		}				public function destroy():void {			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);		}					}}