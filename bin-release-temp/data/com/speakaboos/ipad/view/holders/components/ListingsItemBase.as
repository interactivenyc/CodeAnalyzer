package com.speakaboos.ipad.view.holders.components{	import com.speakaboos.ipad.events.AppEvents;	import com.speakaboos.ipad.events.GenericDataEvent;	import com.speakaboos.ipad.models.data.HolderChildParams;	import com.speakaboos.ipad.models.data.Story;	import com.speakaboos.ipad.utils.BitmapUtils;	import com.speakaboos.ipad.utils.HtmlTextUtil;	import com.speakaboos.ipad.view.components.CacheLoader;	import com.speakaboos.ipad.view.holders.CoreMovieClipHolder;		import flash.display.Bitmap;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.SecurityErrorEvent;	import flash.text.TextField;
	public class ListingsItemBase extends CoreMovieClipHolder	{		public var container:MovieClip;		public var title:TextField;		public var bg_0:MovieClip;		public var bg_1:MovieClip;				protected var _listingsData:Story;		protected var _loader:CacheLoader;		protected var _thumbnail:Bitmap;		protected var _thumbnailLoaded:Boolean = false;				public static const LISTINGS_ITEM_DELETE_CLICKED:String = "LISTINGS_ITEM_DELETE_CLICKED";		public static const LISTINGS_ITEM_PLAY_CLICKED:String = "LISTINGS_ITEM_PLAY_CLICKED";				public function ListingsItemBase(_mc:MovieClip){			super(_mc);			setupChildren(Vector.<HolderChildParams>([				new HolderChildParams("container"),				new HolderChildParams("title"),				new HolderChildParams("bg_0"),				new HolderChildParams("bg_1")			]));			setBg(0);			log("constructor");		}				public function setBg(i:int):void {			var odd:Boolean = (i % 2) > 0;
			bg_0.visibe = !odd;			bg_1.visible = odd;
		}				public function set listingsData(listingsData:Object):void{			_listingsData = listingsData as Story;		}				public function get listingsData():Object{			return _listingsData;		}				override public function onAddedToStage(e:Event = null):void{			super.onAddedToStage(e);			init();		}				override public function onRemovedFromStage(e:Event = null):void{			removed();			super.onRemovedFromStage(e);			}				private function init():void{			log("init: "+_listingsData.name);			display();		}				protected function display():void{			HtmlTextUtil.setFieldText(title, _listingsData.title, HtmlTextUtil.BUTTON);			log("load Thumbnail: "+_listingsData.name);			_loader = new CacheLoader();			_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onThumbnailLoaded,false,0,true);			_loader.addEventListener(IOErrorEvent.IO_ERROR, onIOError,false,0,true);			_loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIOError,false,0,true);			_loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onSecurityError,false,0,true);			_loader.loadUrl(_listingsData.storyIcon);		}		protected function removed():void{			if (_loader) {				_loader.removeEventListener(IOErrorEvent.IO_ERROR, onIOError);				_loader.removeEventListener(SecurityErrorEvent.SECURITY_ERROR, onSecurityError);				if (_loader.contentLoaderInfo) {					_loader.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, onIOError);					_loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, onThumbnailLoaded);				}				_loader.destroy();			}		}				protected function onThumbnailLoaded(e:Event):void{			_loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, onThumbnailLoaded);			log("onThumbnailLoaded: "+_listingsData.name);			_thumbnailLoaded = true;						//_thumbnail = BitmapUtils.copyScaledBmp(Bitmap(_loader.content), 120);			_thumbnail = Bitmap(_loader.content);			_thumbnail.width = 120;			_thumbnail.scaleY = _thumbnail.scaleX;			_thumbnail.smoothing = true;						container.addChild(_thumbnail);						mc.dispatchEvent(new Event( AppEvents.THUMBNAIL_LOADED));		}				protected function onIOError(e:IOErrorEvent):void{			log("onIOError");			log(e.text);		}				protected function onSecurityError(event:SecurityError):void{			log("onSecurityError");		}			}}