package com.speakaboos.ipad.view{	//import com.greensock.TweenLite;	import com.greensock.TweenLite;	import com.speakaboos.ipad.controller.AppController;	import com.speakaboos.ipad.events.AppEvents;	import com.speakaboos.ipad.events.GenericDataEvent;	import com.speakaboos.ipad.events.SpeakaboosServiceEvents;	import com.speakaboos.ipad.models.data.Category;	import com.speakaboos.ipad.models.data.HolderChildParams;	import com.speakaboos.ipad.models.data.Story;	import com.speakaboos.story.events.StoryEvent;	import com.speakaboos.story.utils.AudioPlayer;		import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.events.Event;		/**	 * PAGE LAYOUTS ARE BEING CREATED AND DESTROYED WITH EVERY PAGE TURN.	 * THEY CONTAIN PAGEFLIPVIEW, SO BOTH CLASSES ARE TRANSIENT.	 * BOOKVIEW IS A SINGLETON, TO PROVIDE THESE CLASSES ACCESS TO ITEMS	 * SUCH AS CURRENT PAGE INFORMATION AND PAGE MOVIECLIPS.	 */	public class CategoryPageLayouts extends PageLayouts	{			public var item_1:MovieClip;		public var item_2:MovieClip;		public var item_3:MovieClip;		public var item_4:MovieClip;		public var item_5:MovieClip;		public var item_6:MovieClip;						public var _categoryScreenIcon:MovieClip;		protected var _categoryIcon:CategoryListing;				//		public var categoryScreenIconHolder:CategoryListing;				public function CategoryPageLayouts(){			super(new CategoryPageLayoutsMC());		}		override protected function setupPage():void{			//log("setupPage");						var gotoLabel:String = "items_" + _listingsItems.length;			mc.gotoAndStop(gotoLabel);			gatherChildren(_listingsItems);						loadThumbs();		}						protected function loadCategoryIcon():void{			log("*** loadCategoryIcon");						if (AppController.viewMode == AppController.MODE_STORIES){				var category:Category = _speakaboosService.category;								_categoryScreenIcon = new MovieClip();				_categoryScreenIcon.x = 410;				_categoryScreenIcon.y = 115;											_categoryIcon = new CategoryListing(_categoryScreenIcon); //TODO: needs to be destroyed 				_categoryIcon.init(category, _fromForwardBack);				_categoryIcon.mc.addEventListener(AppEvents.THUMBNAIL_LOADED, categoryIconLoaded);								addChild(_categoryScreenIcon);			}		}						protected function categoryIconLoaded(e:Event = null):void{			log("*** categoryIconLoaded");						_categoryIcon.removeEventListener(AppEvents.THUMBNAIL_LOADED, categoryIconLoaded);			_categoryIcon.addEventListener(CategoryListing.FRAME_LABEL_PASSED, labelPassed);									_categoryScreenIcon.alpha = 1;		}				protected function labelPassed(e:StoryEvent):void{			var frameLabel:String = e.infoObj.frameLabel;			if(frameLabel.indexOf("main") > -1){				_categoryIcon.removeEventListener(CategoryListing.FRAME_LABEL_PASSED, labelPassed);				loadThumbs();			}		}				protected function gatherChildren(listings:Array):void {			var itemListingMC:DisplayObject;			var i:int, j:int;			var name:String;			for (i = 0; i<numChildren; i++) {				itemListingMC = mc.getChildAt(i);				name = itemListingMC.name;				j = int(name.split("_").pop());				if (j) {					listingItemMCs[j-1] = itemListingMC;				}			}		}						override protected function loadThumbs():void{			log("*** loadThumbs: "+new Date());			var itemListing:StoryListing;			for (var i:int=0; i<_listingsItems.length; i++){				itemListing = _listingsItems[i];												itemListing.popupAnim.visible = false;				itemListing.popupAnim.gotoAndStop(1);								itemListing.mc.addEventListener(AppEvents.THUMBNAIL_LOADED, thumbLoaded);								TweenLite.delayedCall(.125*i, loadThumbWithDelay, [i])									//loadThumbWithDelay(i);								}			AudioPlayer.getInstance().playInternalSound("SkewSound");		}				private function loadThumbWithDelay(index:int):void{			listingItemMCs[index].addChild(_listingsItems[index].mc);		}				override protected function thumbLoaded(e:Event):void{			var itemListing:MovieClip = e.target as MovieClip;			itemListing.removeEventListener(AppEvents.THUMBNAIL_LOADED, thumbLoaded);			_numListings --;						//TweenLite.delayedCall(_numListings/6, doPopup, [itemListing]);			doPopup(itemListing);						if(_numListings == 0) thumbsLoaded();		}				override protected function thumbsLoaded():void{			log("*** thumbsLoaded");			AppController.animating = false;			log("* TweenLite.delayedCall(.5, loadCategoryIcon)");			//TweenLite.delayedCall(.5, loadCategoryIcon);			loadCategoryIcon();									if (BookView.getInstance().suppressPageFlips == true){				_eventDispatcher.dispatchEvent(new GenericDataEvent(AppEvents.THUMBNAILS_LOADED));			}else{				_eventDispatcher.dispatchEvent(new GenericDataEvent(AppEvents.THUMBNAILS_LOADED));			}		}				protected function doPopup(itemListing:MovieClip):void{			itemListing.popupAnim.visible = true;			itemListing.popupAnim.gotoAndPlay(1);		}						override protected function onItemClicked(e:GenericDataEvent):void{			log("onButtonClick: " + e.data.story);			var story:Story = e.data.story;			AudioPlayer.getInstance().stopAllSounds();			AudioPlayer.getInstance().playInternalSound(AudioPlayer.SOUND_GENERIC_BUTTON_PRESS);			story.isPromo = false;			_eventDispatcher.dispatchEvent(new GenericDataEvent(SpeakaboosServiceEvents.LOAD_STORY, {story:story}));						}				override public function destroy():void{			if (_categoryIcon != null) _categoryIcon.destroy();			super.destroy();		}					}}