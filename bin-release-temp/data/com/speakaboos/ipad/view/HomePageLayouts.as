package com.speakaboos.ipad.view{	import com.speakaboos.ipad.controller.AppController;	import com.speakaboos.ipad.events.AppEvents;	import com.speakaboos.ipad.events.GenericDataEvent;	import com.speakaboos.ipad.events.SpeakaboosServiceEvents;	import com.speakaboos.ipad.models.data.Category;	import com.speakaboos.ipad.models.data.Story;	import com.speakaboos.ipad.view.components.CacheLoader;	import com.speakaboos.story.utils.AudioPlayer;		import flash.display.MovieClip;	public class HomePageLayouts extends PageLayouts	{		//		public var animals:MovieClip;//		public var princesses:MovieClip;//		public var vehicles:MovieClip;//		public var friends_family:MovieClip;//		public var music:MovieClip;//		public var fantasy:MovieClip;//		public var monsters:MovieClip;//		public var sports:MovieClip;//		public var bugs:MovieClip;		public var billboard:Billboard;		public var billboardPopup:MovieClip;				public var pageLeft:MovieClip;		public var pageRight:MovieClip;										public function HomePageLayouts(){			super(new HomePageLayoutsMC());		}		override protected function setupPage():void{			var i:int,j:int;			var pageIndex:int = BookView.getInstance().getPageIndex();						log("setupPage: "+(pageIndex + 1)+", bb:"+billboard);			var listingsIndexByName:Object = {};			for (i = 0; i<_listingsItems.length; i++) {				listingsIndexByName[_listingsItems[i].category.slug] = i+1;			}						listingsIndexByName[Billboard.slug] = _listingsItems.length+1;						var gotoLabel:String = "items_" + (pageIndex + 1);			mc.gotoAndStop(gotoLabel);						var homeCategoryListing:MovieClip;			listingItemMCs = [];						var slug:String			var category:Category;						for (i = 0; i< numChildren; i++) {				homeCategoryListing = mc.getChildAt(i) as MovieClip;				slug = getSlugFromClip(homeCategoryListing);								if (slug == Billboard.slug) {					billboard = new Billboard();					homeCategoryListing.addChild(billboard.title);																if (AppController.viewMode == AppController.MODE_CATEGORIES && pageIndex == 1){						log("popupAnimFwd");						billboardPopup = new popupAnimFwd();					}else{						log("popupAnimBack");						billboardPopup = new popupAnimBack();					}															billboardPopup.container.addChild(billboard.mc);					billboardPopup.stop();					billboardPopup.visible = false;					homeCategoryListing.addChild(billboardPopup);					_eventDispatcher.addEventListener(AppEvents.UPDATED_BITMAPS, popupBB);					_eventDispatcher.addEventListener(AppEvents.THUMBNAILS_LOADED, showBillboardTitle);				} else {					category = _speakaboosService.getCategoryBySlug(slug);				}								j = listingsIndexByName[slug];				if (j) {					listingItemMCs[j-1] = homeCategoryListing;				} else {					log("setupPage: ERROR child name instance not found for "+homeCategoryListing.name);				}			}			loadThumbs();		}				private function popupBB():void{			_eventDispatcher.removeEventListener(AppEvents.UPDATED_BITMAPS, popupBB);			billboardPopup.visible = true;			billboardPopup.play();			billboardPopup.addEventListener(AppEvents.ANIM_FINISHED, popupAnimFinished);		}				private function popupAnimFinished(e:GenericDataEvent):void{			billboardPopup.removeEventListener(AppEvents.ANIM_FINISHED, popupAnimFinished);			billboard.onAnimFinished();		}				private function showBillboardTitle():void{			_eventDispatcher.removeEventListener(AppEvents.THUMBNAILS_LOADED, showBillboardTitle);			billboard.title.visible = true;		}								private function getSlugFromClip(clip:MovieClip):String {			return clip.name.replace("_","-");		}				private function loadPromo(promo:Object):void{			if (promo.type == "category"){				_speakaboosService.setCategoryBySlug(promo.slug);				_eventDispatcher.dispatchEvent(new GenericDataEvent(SpeakaboosServiceEvents.STORIES_LOADED));			}else if(promo.type == "story"){				log(promo);				var story:Story = _speakaboosService.getStoryBySlug(promo.slug);				story.isPromo = true;				log(story);				_eventDispatcher.dispatchEvent(new GenericDataEvent(SpeakaboosServiceEvents.LOAD_STORY, {story:story}));			}		}				override protected function onItemClicked(e:GenericDataEvent):void{						var slug:String = e.data.slug;			log("* onItemClicked: "+slug);						AudioPlayer.getInstance().stopAllSounds();			AudioPlayer.getInstance().playInternalSound(AudioPlayer.SOUND_GENERIC_BUTTON_PRESS);			var category:Category;			if(slug == "billboard"){				var billboard:Billboard = e.data.button as Billboard;				var promo:Object = billboard.getCurrentPromo();				loadPromo(promo);							}else{				category = _speakaboosService.getCategoryBySlug(slug);				CacheLoader.playAudioFromCachedUrl(category.category_title_audio);				_speakaboosService.setCategoryBySlug(category.slug);				_eventDispatcher.dispatchEvent(new GenericDataEvent(SpeakaboosServiceEvents.STORIES_LOADED));			}		}		override public function destroy():void {			//TODO: flesh this out			log("destory");			_eventDispatcher.removeEventListener(AppEvents.UPDATED_BITMAPS, popupBB);			_eventDispatcher.removeEventListener(AppEvents.THUMBNAILS_LOADED, showBillboardTitle);			if (billboard) {				billboard.destroy();				billboard = null;			}			if (billboardPopup) {				billboardPopup.removeEventListener(AppEvents.ANIM_FINISHED, popupAnimFinished);				billboardPopup.container.removeChildren();			}					super.destroy();		}	}}